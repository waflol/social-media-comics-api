# CircleCI configuration file
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.1
executors:
  backend-executor:
    docker:
      - image: cimg/python:3.10
      - image: cimg/redis:7.0
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres


jobs:
  # Job one with a unique name
  check-lint:
    executor: backend-executor
    steps:
      - checkout
      - run:
          name: Install Lint packages
          command: |
            pip install flake8
      - run:
          name: Check Lint
          command: |
            flake8 .

  test-backend:
    executor: backend-executor
    environment:
      DEBUG: 1
      DB_ENGINE: postgresql
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      ENVIRONMENT: development
    steps:
      - checkout
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z $DB_HOST 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1
      - run:
          name: Migrations and Migrate
          command: |
            pip install -r requirements.txt
            python manage.py migrate
      - run:
          name: Run unit test
          command: |
            pip install coverage
            pip install pytest-django
            coverage run -m pytest --junitxml=test-results/junit.xml
            coverage html
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov

  deploy-prod:
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "59:49:79:51:6d:cc:b8:d1:17:b6:2f:af:cd:ea:12:15"
      - run: ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP "./deploy-v2.sh"

workflows:
  # Name of workflow
  pipeline:
    # List of jobs that will run
    jobs:
      - check-lint
      - test-backend
      - deploy-prod:
          requires:
            - test-backend
            - check-lint
          filters:
            branches:
              only:
                - main
